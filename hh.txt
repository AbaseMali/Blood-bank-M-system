- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema StoreDB
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema StoreDB
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `StoreDB` DEFAULT CHARACTER SET utf8 ;
USE `StoreDB` ;

-- -----------------------------------------------------
-- Table `StoreDB`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `StoreDB`.`user` (
  `id` INT NOT NULL,
  `user_name` VARCHAR(45) NULL,
  `password` VARCHAR(45) NULL,
  `full_name` VARCHAR(45) NULL,
  `department` VARCHAR(20) NULL,
  `phone` VARCHAR(45) NULL,
  `address` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `StoreDB`.`category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `StoreDB`.`category` (
  `category_id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `type` VARCHAR(25) NOT NULL,
  `description` VARCHAR(100) NULL,
  PRIMARY KEY (`category_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `StoreDB`.`purchase_order`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `StoreDB`.`purchase_order` (
  `purchase_order_id` INT NOT NULL,
  `item_name` VARCHAR(35) NULL,
  `vendor` VARCHAR(35) NULL,
  `unit_price` VARCHAR(45) NULL,
  `quantity` INT NULL,
  `total` INT NULL,
  `amount` VARCHAR(45) NULL,
  `created_date` DATETIME NULL,
  `pre_by_name` VARCHAR(45) NULL,
  `pre_by_title` VARCHAR(45) NULL,
  `appr_by_name` VARCHAR(45) NULL,
  `appr_by_title` VARCHAR(45) NULL,
  `author_by_name` VARCHAR(45) NULL,
  `author_by_title` VARCHAR(45) NULL,
  PRIMARY KEY (`purchase_order_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `StoreDB`.`order`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `StoreDB`.`order` (
  `order_id` INT NOT NULL,
  `number` INT NOT NULL,
  `creation_date` DATETIME NOT NULL,
  `modified` DATETIME NULL,
  `description` VARCHAR(100) NULL,
  PRIMARY KEY (`order_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `StoreDB`.`item_order`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `StoreDB`.`item_order` (
  `item_order_id` INT NOT NULL,
  `order_no` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `quantity` INT NOT NULL,
  `description` VARCHAR(45) NOT NULL,
  `order_order_id` INT NULL,
  `item_ordercol` VARCHAR(45) NULL,
  PRIMARY KEY (`item_order_id`),
  INDEX `fk_item_order_order1_idx` (`order_order_id` ASC) VISIBLE,
  CONSTRAINT `fk_item_order_order1`
    FOREIGN KEY (`order_order_id`)
    REFERENCES `StoreDB`.`order` (`order_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `StoreDB`.`item`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `StoreDB`.`item` (
  `item_id` INT NOT NULL,
  `name` VARCHAR(35) BINARY NOT NULL,
  `category` VARCHAR(20) NOT NULL,
  `quantity` INT NOT NULL,
  `category_id` INT NOT NULL,
  `purchase_order_purchase_order_id` INT NOT NULL,
  `item_order_item_order_id` INT NOT NULL,
  PRIMARY KEY (`item_id`),
  INDEX `fk_item_category1_idx` (`category_id` ASC) VISIBLE,
  INDEX `fk_item_purchase_order1_idx` (`purchase_order_purchase_order_id` ASC) VISIBLE,
  INDEX `fk_item_item_order1_idx` (`item_order_item_order_id` ASC) VISIBLE,
  CONSTRAINT `fk_item_category1`
    FOREIGN KEY (`category_id`)
    REFERENCES `StoreDB`.`category` (`category_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_item_purchase_order1`
    FOREIGN KEY (`purchase_order_purchase_order_id`)
    REFERENCES `StoreDB`.`purchase_order` (`purchase_order_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_item_item_order1`
    FOREIGN KEY (`item_order_item_order_id`)
    REFERENCES `StoreDB`.`item_order` (`item_order_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `StoreDB`.`Store_Request_Form`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `StoreDB`.`Store_Request_Form` (
  `id` INT NOT NULL,
  `item` VARCHAR(45) NOT NULL,
  `quantity` INT NOT NULL,
  `department` VARCHAR(45) NULL,
  `created_date` DATETIME NOT NULL,
  `requested_by` VARCHAR(45) NOT NULL,
  `occupation` VARCHAR(45) NULL,
  `date` DATETIME NULL,
  `approved_by` VARCHAR(45) NULL,
  `occupation` VARCHAR(45) NULL,
  `item_item_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Store_Request_Form_item1_idx` (`item_item_id` ASC) VISIBLE,
  CONSTRAINT `fk_Store_Request_Form_item1`
    FOREIGN KEY (`item_item_id`)
    REFERENCES `StoreDB`.`item` (`item_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
